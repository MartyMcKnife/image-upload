{"version":3,"sources":["components/Upload-Page/Header.tsx","components/Upload-Page/ChooseFile.tsx","components/Upload-Page/Imagedrop.tsx","components/Upload-Page/InvalidFiles.tsx","components/Upload-Page/Upload.tsx","components/Loading/Loading.tsx","components/Result/Result.tsx","components/ErrorMessage.tsx","App.tsx","index.tsx"],"names":["Header","className","ChooseFile","setImage","type","id","name","onChange","e","target","files","file","accept","htmlFor","Imagedrop","onDrop","noClick","getRootProps","getInputProps","icon","faPhotoVideo","size","InvalidFiles","Upload","setData","setLoading","setError","useState","image","invalid","setInvalid","useEffect","form","a","axios","method","url","data","headers","resp","console","log","response","err","code","status","message","test","formData","FormData","append","sendData","Loading","Result","copied","setCopied","colour","faCheck","color","src","alt","text","onCopy","ErrorMessage","error","App","loading","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAEe,SAASA,IACtB,OACE,sBAAKC,UAAU,oBAAf,UACE,oBAAIA,UAAU,WAAd,+BACA,oBAAIA,UAAU,gBAAd,6CCCS,SAASC,EAAT,GAAwD,IAAlCC,EAAiC,EAAjCA,SAOnC,OACE,gCACE,+BACE,uBACEC,KAAK,OACLC,GAAG,QACHJ,UAAU,SACVK,KAAK,QACLC,SAda,SAACC,GACpB,GAAIA,EAAEC,OAAOC,MAAO,CAClB,IAAMC,EAAOH,EAAEC,OAAOC,MAAM,GAC5BP,EAASQ,KAYLC,OAAO,cAGX,uBAAOC,QAAQ,QAAQZ,UAAU,mCAAjC,4B,iCCjBS,SAASa,EAAT,GAAuD,IAAlCX,EAAiC,EAAjCA,SAKlC,OACE,qBAAKF,UAAU,8EAAf,SACE,cAAC,IAAD,CAAUc,OANC,SAACL,GACdP,EAASO,EAAM,KAKaM,SAAS,EAAnC,SACG,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACC,kCACE,gDAASD,KAAT,cACE,cAAC,IAAD,CAAiBE,KAAMC,IAAcC,KAAK,OAC1C,qCAAWH,MACX,mBAAGjB,UAAU,OAAb,oDCpBC,SAASqB,IACtB,OACE,qBAAKrB,UAAU,oBAAf,SACE,4DCWS,SAASsB,EAAT,GAIU,IAHvBC,EAGsB,EAHtBA,QACAC,EAEsB,EAFtBA,WACAC,EACsB,EADtBA,SACsB,EACIC,qBADJ,mBACfC,EADe,KACRzB,EADQ,OAEQwB,oBAAS,GAFjB,mBAEfE,EAFe,KAENC,EAFM,KA+CtB,OA3CAC,qBAAU,WAAM,4CACd,WAAwBC,GAAxB,qBAAAC,EAAA,sEAEIR,GAAW,GAFf,SAGuBS,IAAM,CACvBC,OAAQ,OACRC,IAAK,cACLC,KAAML,EACNM,QAAS,CAAE,eAAgB,yBAPjC,OAGUC,EAHV,OASIC,QAAQC,IAAIF,GAEZf,EAAQe,EAAKF,MACbZ,GAAW,GAZf,kDAcIA,GAAW,GACP,KAAEiB,UACEC,EADQ,KAEdjB,EAAS,CACPkB,KAAI,UAAED,EAAID,gBAAN,aAAE,EAAcG,OACpBC,QAAO,UAAEH,EAAID,gBAAN,aAAE,EAAcL,QAGzBX,EAAS,CACPkB,KAAM,EACNE,QAAS,YAxBjB,2DADc,sBA+Bd,GAAIlB,EACF,GAAI,YAAYmB,KAAKnB,EAAMxB,MAAO,CAChC0B,GAAW,GAEX,IAAMkB,EAAW,IAAIC,SACrBD,EAASE,OAAO,QAAStB,GApCd,SAAD,2BAqCVuB,CAASH,QACJlB,GAAW,KAGnB,CAACF,IAGF,sBAAK3B,UAAU,gCAAf,UACE,cAACD,EAAD,IACA,cAACc,EAAD,CAAWX,SAAUA,IACrB,mBAAGF,UAAU,OAAb,gBACA,cAACC,EAAD,CAAYC,SAAUA,IACrB0B,GACC,8BACE,cAACP,EAAD,SCzEK,SAAS8B,IACtB,OACE,qCACE,oBAAInD,UAAU,qBAAd,0BACA,qBAAKA,UAAU,oC,YCKN,SAASoD,EAAT,GAAgD,IAA9BhB,EAA6B,EAA7BA,KAA6B,EAChCV,oBAAS,GADuB,mBACrD2B,EADqD,KAC7CC,EAD6C,KAGtDC,EAASF,EAAS,eAAiB,cACzC,OACE,gCACE,cAAC,IAAD,CAAiBnC,KAAMsC,IAASpC,KAAK,KAAKqC,MAAM,UAChD,wDACA,qBACEC,IAAKtB,EAAKD,IACVwB,IAAI,uBACJ3D,UAAU,oDAEZ,sBAAKA,UAAU,4DAAf,UACE,mBAAGA,UAAU,QAAb,SAAsBoC,EAAKD,MAC3B,cAAC,kBAAD,CAAiByB,KAAMxB,EAAKD,IAAK0B,OAAQ,kBAAMP,GAAU,IAAzD,SACE,wBAAQtD,UAAS,UAAKuD,EAAL,yBAAjB,SACIF,EAAuB,eAAd,sBCpBR,SAASS,EAAT,GAAuD,IAA/BC,EAA8B,EAA9BA,MACrC,OACE,8BACGA,GACC,sBAAK/D,UAAU,iFAAf,UACE,oFACA,8CAAiB+D,EAAMpB,QACvB,2CAAcoB,EAAMlB,gBC2BfmB,MA3Bf,WAAgB,IAAD,EACWtC,qBADX,mBACNU,EADM,KACAb,EADA,OAEiBG,oBAAS,GAF1B,mBAENuC,EAFM,KAEGzC,EAFH,OAGaE,qBAHb,mBAGNqC,EAHM,KAGCtC,EAHD,KAKb,OACE,qBAAKzB,UAAU,+DAAf,SACE,qBAAKA,UAAU,kDAAf,SACGiE,EACC,cAACd,EAAD,IACEf,EACF,cAACgB,EAAD,CAAQhB,KAAMA,IAEd,gCACE,cAACd,EAAD,CACEC,QAASA,EACTC,WAAYA,EACZC,SAAUA,IAEZ,cAACqC,EAAD,CAAcC,MAAOA,YC7BjCG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.86f23049.chunk.js","sourcesContent":["import React, { ReactElement } from \"react\";\n\nexport default function Header(): ReactElement {\n  return (\n    <div className=\"font-medium mb-12\">\n      <h1 className=\"text-2xl\">Upload your image</h1>\n      <h3 className=\"text-gray-500\">File should be JPEG or a PNG</h3>\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport { ChangeEvent } from \"react\";\n\ninterface Props {\n  setImage: React.Dispatch<React.SetStateAction<File | undefined>>;\n}\n\nexport default function ChooseFile({ setImage }: Props): ReactElement {\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files) {\n      const file = e.target.files[0];\n      setImage(file);\n    }\n  };\n  return (\n    <div>\n      <form>\n        <input\n          type=\"file\"\n          id=\"files\"\n          className=\"hidden\"\n          name=\"image\"\n          onChange={handleChange}\n          accept=\"image/*\"\n        />\n      </form>\n      <label htmlFor=\"files\" className=\"bg-blue-400 px-2 py-1 rounded-lg\">\n        Choose File\n      </label>\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\nimport Dropzone, { FileWithPath } from \"react-dropzone\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPhotoVideo } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface Props {\n  setImage: React.Dispatch<React.SetStateAction<File | undefined>>;\n}\n\nexport default function Imagedrop({ setImage }: Props): ReactElement {\n  const onDrop = (files: FileWithPath[]) => {\n    setImage(files[0]);\n  };\n\n  return (\n    <div className=\"border-dashed border-blue-200 border-2 w-96 my-8 p-8 bg-gray-200 rounded-md\">\n      <Dropzone onDrop={onDrop} noClick={true}>\n        {({ getRootProps, getInputProps }) => (\n          <section>\n            <div {...getRootProps()}>\n              <FontAwesomeIcon icon={faPhotoVideo} size=\"8x\" />\n              <input {...getInputProps()} />\n              <p className=\"py-4\">Drag & drop your image here</p>\n            </div>\n          </section>\n        )}\n      </Dropzone>\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\n\nexport default function InvalidFiles(): ReactElement {\n  return (\n    <div className=\"mt-4 text-red-700\">\n      <h1>Only images are allowed!</h1>\n    </div>\n  );\n}\n","import React, { ReactElement, useState, useEffect } from \"react\";\nimport axios, { AxiosError } from \"axios\";\n\nimport Header from \"./Header\";\nimport ChooseFile from \"./ChooseFile\";\nimport Imagedrop from \"./Imagedrop\";\nimport InvalidFiles from \"./InvalidFiles\";\n\nimport { Response, Error } from \"./../../App\";\n\ninterface Props {\n  setData: React.Dispatch<React.SetStateAction<Response | undefined>>;\n  setLoading: React.Dispatch<React.SetStateAction<boolean>>;\n  setError: React.Dispatch<React.SetStateAction<Error | undefined>>;\n}\n\nexport default function Upload({\n  setData,\n  setLoading,\n  setError,\n}: Props): ReactElement {\n  const [image, setImage] = useState<File | undefined>();\n  const [invalid, setInvalid] = useState(false);\n\n  useEffect(() => {\n    async function sendData(form: FormData) {\n      try {\n        setLoading(true);\n        const resp = await axios({\n          method: \"POST\",\n          url: \"/api/upload\",\n          data: form,\n          headers: { \"Content-Type\": \"multipart/form-data\" },\n        });\n        console.log(resp);\n\n        setData(resp.data);\n        setLoading(false);\n      } catch (e) {\n        setLoading(false);\n        if (e.response) {\n          const err: AxiosError = e;\n          setError({\n            code: err.response?.status,\n            message: err.response?.data,\n          });\n        } else {\n          setError({\n            code: 0o0,\n            message: \"Unknown\",\n          });\n        }\n      }\n    }\n\n    if (image) {\n      if (/image\\//gi.test(image.type)) {\n        setInvalid(false);\n\n        const formData = new FormData();\n        formData.append(\"image\", image);\n        sendData(formData);\n      } else setInvalid(true);\n    }\n    //eslint-disable-next-line\n  }, [image]);\n\n  return (\n    <div className=\"font-poppins mx-4 my-2 w-auto\">\n      <Header />\n      <Imagedrop setImage={setImage} />\n      <p className=\"mb-4\">or</p>\n      <ChooseFile setImage={setImage} />\n      {invalid && (\n        <div>\n          <InvalidFiles />\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\n\nexport default function Loading(): ReactElement {\n  return (\n    <>\n      <h1 className=\"text-2xl py-4 px-8\">Uploading...</h1>\n      <div className=\"progress-line rounded-md w-8\"></div>\n    </>\n  );\n}\n","import React, { ReactElement, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nimport { Response } from \"./../../App\";\n\ninterface Props {\n  data: Response;\n}\n\nexport default function Result({ data }: Props): ReactElement {\n  const [copied, setCopied] = useState(false);\n\n  const colour = copied ? \"bg-green-300\" : \"bg-blue-300\";\n  return (\n    <div>\n      <FontAwesomeIcon icon={faCheck} size=\"6x\" color=\"green\" />\n      <h1>Uploaded Successfully!</h1>\n      <img\n        src={data.url}\n        alt=\"Your uploaded image!\"\n        className=\"content-center inline-block h-96 rounded-md m-4\"\n      ></img>\n      <div className=\"flex items-center border-2 border-gray-200 p-1 rounded-lg\">\n        <p className=\" mx-4\">{data.url}</p>\n        <CopyToClipboard text={data.url} onCopy={() => setCopied(true)}>\n          <button className={`${colour} px-4 py-2 rounded-md`}>\n            {!copied ? \"Copy Link\" : \"Link Copied!\"}\n          </button>\n        </CopyToClipboard>\n      </div>\n    </div>\n  );\n}\n","import React, { ReactElement } from \"react\";\n\nimport { Error } from \"./../App\";\n\ninterface Props {\n  error: Error | undefined;\n}\n\nexport default function ErrorMessage({ error }: Props): ReactElement {\n  return (\n    <div>\n      {error && (\n        <div className=\"absolute bottom-6 right-6 bg-red-300 p-4 rounded-lg shadow-md bounce-in-bottom\">\n          <h2>Looks like there was a problem uploading your file</h2>\n          <h3>Error code: {error.code}</h3>\n          <h3>Message: {error.message}</h3>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Upload from \"./components/Upload-Page/Upload\";\nimport Loading from \"./components/Loading/Loading\";\nimport Result from \"./components/Result/Result\";\nimport ErrorMessage from \"./components/ErrorMessage\";\n\nexport interface Response {\n  url: string;\n}\n\nexport interface Error {\n  code: number | undefined;\n  message: string;\n}\n\nfunction App() {\n  const [data, setData] = useState<Response>();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error>();\n\n  return (\n    <div className=\"flex justify-center items-center h-screen bg-gray-100 w-full\">\n      <div className=\"bg-gray-50 rounded-lg shadow-md p-6 text-center\">\n        {loading ? (\n          <Loading />\n        ) : data ? (\n          <Result data={data} />\n        ) : (\n          <div>\n            <Upload\n              setData={setData}\n              setLoading={setLoading}\n              setError={setError}\n            />\n            <ErrorMessage error={error} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}